//collatz sequence

//create memory
111131113 11111111 11111111 13

//output starting number
041414141414141402CC

//loop
5
01111111

//check if odd
5

//x *= three, then plus one
//copy x to y, shift y left and increase by one
51111111370111111
5111111137011111
511111113701111
51111111370111
5111111137011
511111113701
51111111370
5F7
022222222223

//add y and x, store result in z
5222222225022236022376222222225022377
022222222222
5222222225022223602225323637762222222250222532363777
0222222222222
5222222225022222360222253236377622222222502222532363777
02222222222222
5222222225022222236022222532363776222222225022222532363777
022222222222222
5222222225022222223602222225323637762222222250222222532363777
0222222222222222
5222222225022222222360222222253236377622222222502222222532363777
02222222222222222
5222222225022222222236022222222532363776222222225022222222532363777
022222222222222222
5222222225F602222222225323637762222222250222222222532363777

//move z to x
02250111111156376011111115377
0222501111115637601111115377
022225011111563760111115377
02222250111156376011115377
0222222501115637601115377
022222225011563760115377
02222222250156376015377
0222222222505637605377

//make y and z zero
022537253725372537253725372537253725372537253725372537253725372537

//if eval
6
//divide x by 2
//right shift x
0111111
51563761537722
51563761537722
51563761537722
51563761537722
51563761537722
51563761537722
5156376153772537

7

//output x
041414141414141402CC

//if x is one, terminate
05615615615615615615615023677777777

028
